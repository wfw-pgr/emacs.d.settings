import os, sys
import numpy                      as np
import nkUtilities.plot1D         as pl1
import nkUtilities.load__config   as lcf
import nkUtilities.configSettings as cfs


# ========================================================= #
# === plot frequency characteristics of pill-box cavity === #
# ========================================================= #

def transit_time():

    x_, y_, z_               = 0, 1, 2

    # ------------------------------------------------- #
    # --- [1] parameters                            --- #
    # ------------------------------------------------- #
    nData                    = 101
    xMin                     = 0.0
    xMax                     = 1.0

    # ------------------------------------------------- #
    # --- [2] Data Making                           --- #
    # ------------------------------------------------- #
    Data                     = np.zeros( (nData,2) )
    Data[:,x_]               = np.linspace( xMin,xMax,nData )
    Data[:,y_]               = Data[:,x_]
    
    # ------------------------------------------------- #
    # --- [3] plot config                           --- #
    # ------------------------------------------------- #
    pngFile                  = "png/1.png"
    config                   = lcf.load__config()
    config                   = cfs.configSettings( configType="plot.def", config=config )
    config["plt_xAutoRange"] = True
    config["plt_yAutoRange"] = True
    config["plt_xRange"]     = [ -1.2, +1.2 ]
    config["plt_yRange"]     = [ -1.2, +1.2 ]

    # ------------------------------------------------- #
    # --- [4] plot                                  --- #
    # ------------------------------------------------- #
    fig     = pl1.plot1D( config=config, pngFile=pngFile )
    fig.add__plot( xAxis=Data[:,x_], yAxis=Data[:,y_] )
    fig.add__legend()
    fig.set__axis()
    fig.save__figure()
    return()


# ========================================================= #
# ===   Execution of Pragram                            === #
# ========================================================= #

if ( __name__=="__main__" ):
    transit_time()
