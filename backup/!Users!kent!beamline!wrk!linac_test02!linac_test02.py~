#!/usr/bin/python

import beamline
import matplotlib.pyplot as plt


# define elements by ``Element*`` class in ``beamline`` package
q  = beamline.ElementCharge  (name='q' , )
q1 = beamline.ElementQuad    (name='Q1', config='k1=10,l=0.2')
b1 = beamline.ElementCsrcsben(name='B1', config='angle=+0.25,l=0.25')
b2 = beamline.ElementCsrcsben(name='B2', config='angle=+0.25,l=0.25')
b3 = beamline.ElementCsrcsben(name='B3', config='angle=+0.25,l=0.25')
b4 = beamline.ElementCsrcsben(name='B4', config='angle=+0.25,l=0.25')
d1 = beamline.ElementCsrdrift(name='D1', config='l=0.5')

# create lattice model by ``Models`` class
lattice = beamline.Models(name='BL', mode='simu') 
qline = (d1, q1, d1)
chi1   = (q1, d1, b1, d1, q1, d1, q1, d1, b2, d1, q1)
chi2   = (q1, d1, b3, d1, q1, d1, q1, d1, b4, d1, q1)
lattice.addElement(q, qline, chi1, qline, chi2, qline)
#ptches, anotelist, xrange, yrange = lattice.draw(showfig=False, mode='fancy')
ptches, anotelist, xrange, yrange = lattice.draw(showfig=False, mode='plain')

# show lattice in "fancy" mode
fig = plt.figure()
ax = fig.add_subplot(111, aspect='equal')
[ax.add_patch(i) for i in ptches]
ax.set_xlim(xrange)
ax.set_ylim(yrange)
ax.set_yticks([])
#plt.grid()
plt.show()
