import numpy as np
import sys
import gmsh


# ------------------------------------------------- #
# --- [1] initialization of the gmsh            --- #
# ------------------------------------------------- #
gmsh.initialize()
gmsh.option.setNumber( "General.Terminal", 1 )
gmsh.model.add( "ex2" )

# ------------------------------------------------- #
# --- [2] point definition                      --- #
# ------------------------------------------------- #
lc = 2.0
rCenter = 600.0
zCenter = 200.0
rWidth  =  40.0
zWidth  =  80.0
p1      = [ rCenter-rWidth/2, 0.0, zCenter-zWidth/2 ]
p2      = [ rCenter+rWidth/2, 0.0, zCenter-zWidth/2 ]
p3      = [ rCenter+rWidth/2, 0.0, zCenter+zWidth/2 ]
p4      = [ rCenter-rWidth/2, 0.0, zCenter+zWidth/2 ]
gmsh.model.geo.addPoint( p1[0], p1[1], p1[2], lc, 1 )
gmsh.model.geo.addPoint( p2[0], p2[1], p2[2], lc, 2 )
gmsh.model.geo.addPoint( p3[0], p3[1], p3[2], lc, 3 )
gmsh.model.geo.addPoint( p4[0], p4[1], p4[2], lc, 4 )

# ------------------------------------------------- #
# --- [3] line definition                       --- #
# ------------------------------------------------- #
gmsh.model.geo.addLine( 1, 2, 1 )
gmsh.model.geo.addLine( 2, 3, 2 )
gmsh.model.geo.addLine( 3, 4, 3 )
gmsh.model.geo.addLine( 4, 1, 4 )
gmsh.model.addPhysicalGroup(1, [1,2,3,4], 1)

# ------------------------------------------------- #
# --- [4] surface definition                    --- #
# ------------------------------------------------- #
gmsh.model.geo.addCurveLoop([1, 2, 3, 4], 1)
gmsh.model.geo.addPlaneSurface([1], 1)
gmsh.model.addPhysicalGroup(2, [1], 1)

# ------------------------------------------------- #
# --- [5] volume definition                     --- #
# ------------------------------------------------- #
#  -- [5-1] extrude volume                      --  #
# dy   = 100.0
# nE   = int( dy / lc )
# vol1 = gmsh.model.geo.extrude( [(2,1)], 0,dy,0, [nE], [], True )
# gmsh.model.addPhysicalGroup( vol1[1][0], [ vol1[1][1] ], 101 )
#  -- [5-2] revolve volume                      --  #
origin = [0,0,0]
rot_ax = [0,0,1]
angle  = np.pi
nElems = 90
vol1 = gmsh.model.geo.revolve( [(2,1)], origin[0], origin[1], origin[2], \
                               rot_ax[0],rot_ax[1],rot_ax[2], + angle, [nElems], recombine=True )
vol2 = gmsh.model.geo.revolve( [(2,1)], origin[0], origin[1], origin[2], \
                               rot_ax[0],rot_ax[1],rot_ax[2], - angle, [nElems], recombine=True )
gmsh.model.addPhysicalGroup( vol1[1][0], [ vol1[1][1] ], 101 )
gmsh.model.addPhysicalGroup( vol2[1][0], [ vol2[1][1] ], 102 )

# ------------------------------------------------- #
# --- [4] post process                          --- #
# ------------------------------------------------- #
gmsh.model.geo.synchronize()
gmsh.model.mesh.generate(3)
gmsh.write( "ex2.msh" )
gmsh.finalize()
