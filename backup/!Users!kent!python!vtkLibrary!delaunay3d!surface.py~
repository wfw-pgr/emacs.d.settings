#!/usr/bin/env python

from vtk import vtkPoints, vtkCellArray, vtkVertex, vtkUnstructuredGrid
from vtk import vtkFloatArray
from vtk import vtkXMLUnstructuredGridWriter

from random import random

coords = (
(0,0,2),
(1,0,2),
(1,1,2),
(0,1,2),
(2,0,2),
(3,0,2),
(3,1,2),
(2,1,2))

#=== Create a VTK array to store points
points = vtkPoints()

#=== Loop over the list of coordinates and insert them into the array; store
# corresponding point index (or id)
pids = []
for crd in coords:
   pids.append(points.InsertNextPoint(crd))

# Create a VTK array to store cells
cells = vtkCellArray()

vertex = vtkVertex()
typecode = vertex.GetCellType()
ncellpoints = vertex.GetNumberOfPoints()

for p in pids:
   # Notify the cells array of how many cellpoints are needed to describe the
   # next cell that we want to insert
   cells.InsertNextCell(ncellpoints)

# For a vertex, we only need to insert a single point index; for a triangle
# this would typically be a loop
cells.InsertCellPoint(p)

# Create a data array
#

temperature = vtkFloatArray()
temperature.SetName('temperature')

npoints = points.GetNumberOfPoints()
temperature.SetNumberOfValues(npoints)

# Insert some random data
for i in range(npoints):
    temperature.SetValue(i, random())

grid = vtkUnstructuredGrid()
grid.SetPoints(points)
grid.SetCells(typecode, cells)

grid.GetPointData().SetScalars(temperature)

writer = vtkXMLUnstructuredGridWriter()
writer.SetDataModeToAscii()
writer.SetInput(grid)
writer.SetFileName('vertex_demo.vtu')
writer.Write()
