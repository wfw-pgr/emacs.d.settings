import numpy as np

# ========================================================= #
# ===  generate shimming target field                   === #
# ========================================================= #

def generate__shimmingTarget():

    # ------------------------------------------------- #
    # --- [0] Load parameter File                   --- #
    # ------------------------------------------------- #
    import nkUtilities.load__constants as lcn
    cnfFile    = "dat/shim.conf"
    params     = lcn.load__constants( inpFile=cnfFile )
    
    # ------------------------------------------------- #
    # --- [1] Load source Field File (.cst type)    --- #
    # ------------------------------------------------- #
    inpFile  = "dat/bfield.cst"
    with open( inpFile, "r" ) as f:
        Data = np.loadtxt( f, skiprows=2 )

    # ------------------------------------------------- #
    # --- [2] extract Median-plane                  --- #
    # ------------------------------------------------- #
    import nkBasicAlgs.extract__pointData as epd
    ret1     = epd.extract__pointData( Data=Data, ref_=2, value=0.0, epsilon=1.e-6 )
    LILJ     = ( params["LI"], params["LJ"] )

    # ------------------------------------------------- #
    # --- [3] kji => ijk reordering                 --- #
    # ------------------------------------------------- #
    import nkBasicAlgs.reorder__ijk_kji as ijk
    ret2     = ijk.reorder__ijk_kji( Data=ret1, convert="kji_ijk", DataType="point", shape=LILJ )

    # ------------------------------------------------- #
    # --- [4] middle file saving                    --- #
    # ------------------------------------------------- #
    import nkUtilities.save__pointFile as spf
    gridFile = "dat/grid.dat"
    shape    = (LILJ[1],LILJ[0],6)
    spf.save__pointFile( outFile=gridFile, Data=ret2, DataOrder="ijk", shape=shape )

    # ------------------------------------------------- #
    # --- [5] generate mesh to be interpolated      --- #
    # ------------------------------------------------- #
    import generate__interpMesh        as gim
    gim.generate__interpMesh( lc =params["lc"] , r1 =params["r1"] , r2     =params["r2"], \
                              th1=params["th1"], th2=params["th2"], zoffset=params["zoffset"] )

    # ------------------------------------------------- #
    # --- [6] interp grid Data on Mesh              --- #
    # ------------------------------------------------- #
    import interpOnMesh as iom
    meshFile = "dat/shim.nodes"
    iom.interpOnMesh( gridFile=gridFile, meshFile=meshFile )

    # ------------------------------------------------- #
    # --- [7] EMSolution post-process coordinate    --- #
    # ------------------------------------------------- #
    emspFile = "dat/ems_pst_coord.dat"
    with open( meshFile, "r" ) as f:
        Data = np.loadtxt( f )
    wData = np.copy( Data[:,2:] )
    with open( emspFile, "w" ) as f:
        np.savetxt( f, wData, fmt="%15.8e" )
        print( "[generate__shimmingTarget] output :: {0} ".format( emspFile ) )

# ======================================== #
# ===  実行部                          === #
# ======================================== #
if ( __name__=="__main__" ):
    generate__shimmingTarget()
