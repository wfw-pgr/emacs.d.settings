import os, sys
import numpy as np

# ========================================================= #
# ===  test ( rbf interpolation )                       === #
# ========================================================= #

def test():

    x_, y_, z_ = 0, 1, 2
    
    # ------------------------------------------------- #
    # --- [1] coordinate                            --- #
    # ------------------------------------------------- #
    import nkUtilities.equiSpaceGrid as esg
    x1MinMaxNum = [ 0.0, 1.0, 11 ]
    x2MinMaxNum = [ 0.0, 1.0, 11 ]
    x3MinMaxNum = [ 0.0, 0.0,  1 ]
    coord       = esg.equiSpaceGrid( x1MinMaxNum=x1MinMaxNum, x2MinMaxNum=x2MinMaxNum, \
                                     x3MinMaxNum=x3MinMaxNum, returnType = "point" )
    
    # ------------------------------------------------- #
    # --- [2] training nodes                        --- #
    # ------------------------------------------------- #
    bot_points       = np.zeros( (11,3) )
    bot_points[:,x_] = np.linspace( 0.0, 1.0, 11 )
    top_points       = np.zeros( (11,3) )
    top_points[:,x_] = np.linspace( 0.0, 1.0, 11 )
    top_points[:,y_] = 1.0
    mod_points       = np.zeros( (11,3) )
    mod_points[:,x_] = np.linspace( 0.0, 1.0, 11 )
    mod_points[:,y_] = 1.0 - 0.2*np.sin( mod_points[:,x_] * np.pi )

    training_before  = np.concatenate( [top_points,bot_points], axis=0 )
    training_after   = np.concatenate( [top_points,mod_points], axis=0 )

    # ------------------------------------------------- #
    # --- [3] define rbf                            --- #
    # ------------------------------------------------- #
    def rbf_func( xi, xj, coef=3.0 ):
        dist = np.sqrt( np.sum( ( xi - xj )**2, axis=-1 ) )
        rbf  = np.exp( - coef*dist**2 )

    # ------------------------------------------------- #
    # --- [4] make G matrix                         --- #
    # ------------------------------------------------- #
    nTrain      = training_before.shape[0]
    xvec1,xvec2 = np.meshgrid( training_before[:,x_], training_before[:,x_], indexing="ij" )
    yvec1,yvec2 = np.meshgrid( training_before[:,y_], training_before[:,y_], indexing="ij" )
    zvec1,zvec2 = np.meshgrid( training_before[:,z_], training_before[:,z_], indexing="ij" )

    Ginv     = np.linalg.inv( Gmat )
