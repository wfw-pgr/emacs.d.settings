import numpy as np
import sys
import gmsh

gmshlib = "/Users/kent/gmsh/pygmshLibrary/"
sys.path.append( gmshlib )
import generateRectangularBox  as box
import generateXYplaneArcCurve as arc


# ------------------------------------------------- #
# --- [1] initialization of the gmsh            --- #
# ------------------------------------------------- #
gmsh.initialize()
gmsh.option.setNumber( "General.Terminal", 1 )
gmsh.model.add( "model" )


# ------------------------------------------------- #
# --- [2] initialize settings                   --- #
# ------------------------------------------------- #
ptsDim , lineDim , surfDim , voluDim  =  0,  1,  2,  3
pts    , line    , surf    , volu     = {}, {}, {}, {}
ptsPhys, linePhys, surfPhys, voluPhys = {}, {}, {}, {}
lc                                    = 0.05
x_,y_,z_,lc_,tag_                     = 0, 1, 2, 3, 4

# ------------------------------------------------- #
# --- [3] Modeling                              --- #
# ------------------------------------------------- #

r1      = 1.0
r2      = 2.0
th1     = 280.0
th2     = 340.0
zoffset = 0.0
origin  = [ 0.0, 0.0 ]

arc1    = arc.generateXYplaneArcCurve( radius=r1, th1=th1, th2=th2, \
                                       zoffset=zoffset, origin=origin, lc=lc )
arc2    = arc.generateXYplaneArcCurve( radius=r2, th1=th1, th2=th2, \
                                       zoffset=zoffset, origin=origin, lc=lc )
pts["corner1"] = arc1["pts"]["+x"]
pts["corner2"] = arc1["pts"]["-x"]
pts["corner3"] = arc2["pts"]["+x"]
pts["corner4"] = arc2["pts"]["-x"]
print( pts )
line["arc12"]  = arc1["Lines"]["line1"]
line["arc34"]  = arc2["Lines"]["line1"]
line["end24"]  = gmsh.model.occ.addLine( pts["corner2"][tag_], pts["corner4"][tag_] )
line["end31"]  = gmsh.model.occ.addLine( pts["corner3"][tag_], pts["corner1"][tag_] )
LineLoop       = [ line["arc12"], line["end24"], - line["arc34"], line["end31"] ]
LineLoopGroup  = gmsh.model.occ.addCurveLoop( LineLoop )
surf["fan"]    = gmsh.model.occ.addPlaneSurface( [LineLoopGroup] )

# ------------------------------------------------- #
# --- [4] Physical Grouping                     --- #
# ------------------------------------------------- #
gmsh.model.occ.synchronize()
surfPhys["fan"] = gmsh.model.addPhysicalGroup( surfDim, [ surf["fan"] ], tag=201 )


# ------------------------------------------------- #
# --- [2] post process                          --- #
# ------------------------------------------------- #
gmsh.model.occ.synchronize()
gmsh.model.mesh.generate(2)
gmsh.write( "model.geo_unrolled" )
gmsh.write( "model.msh" )
gmsh.finalize()

