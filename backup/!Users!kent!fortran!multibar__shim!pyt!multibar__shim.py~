import numpy                       as np
import nkUtilities.load__constants as lcn
import nkUtilities.equiSpaceGrid   as esg


# ========================================================= #
# ===  generate Coordinate                              === #
# ========================================================= #
def generate__bcoordinate():

    # ------------------------------------------------- #
    # --- [1] Arguments                             --- #
    # ------------------------------------------------- #
    outFile     = "dat/bcoordinate.dat"
    prmFile     = "dat/parameter.conf"
    const       = lcn.load__constants( inpFile=prmFile )
    
    # ------------------------------------------------- #
    # --- [2] generate Coordinate                   --- #
    # ------------------------------------------------- #
    x1MinMaxNum = [ const["bfield_xMin"], const["bfield_xMax"], const["bfield_LI"] ]
    x2MinMaxNum = [ const["bfield_yMin"], const["bfield_yMax"], const["bfield_LJ"] ]
    x3MinMaxNum = [ const["bfield_zMin"], const["bfield_zMax"], const["bfield_LK"] ]
    ret         = esg.equiSpaceGrid( x1MinMaxNum=x1MinMaxNum, x2MinMaxNum=x2MinMaxNum, \
                                     x3MinMaxNum=x3MinMaxNum, returnType = "point" )
    
    # ------------------------------------------------- #
    # --- [3] write Data into File                  --- #
    # ------------------------------------------------- #
    import nkUtilities.save__pointFile as spf
    spf.save__pointFile( outFile=outFile, Data=ret )


# ======================================== #
# ===  実行部                          === #
# ======================================== #
if ( __name__=="__main__" ):
    generate__bcoordinate()
